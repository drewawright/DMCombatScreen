@model IEnumerable<DMCombatScreen.Models.RunCombatCharacter>

@{
    ViewBag.Title = "RunCombat";
}

<h2>Run Combat</h2>

@if (TempData.ContainsKey("SaveResult"))
{
    <div class="alert alert-success alert-dismissable fade in" role="alert">
        <button type="button" class="close" data-dismiss="alert">
            <span>&times;</span>
        </button>
        @TempData["SaveResult"]
    </div>
}


<div class="table-responsive">
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CharacterName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TotalInitiative)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CurrentHP)
            </th>
            <th class="hpbar hidden-sm hidden-xs"></th>
            <th>
                @Html.DisplayNameFor(model => model.MaxHP)
            </th>
            <th>
                Conditions
            </th>
            <th></th>
            <th>
        </tr>

        @foreach (var item in Model)
        {

            string selectedRow = "";
            if (item.TurnOrderNumber == ViewBag.SelectedCharacter)
            {
                selectedRow = "success";
            }

            <tr class="@selectedRow">
                <td>
                    @Html.DisplayFor(modelItem => item.CharacterName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalInitiative)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CurrentHP)
                </td>
                @if (!item.IsPlayer && item.CurrentHP != null)
                {
                    <td class="hpbar hidden-sm hidden-xs">
                        <div class="progress">
                            <div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="@item.CurrentHP" aria-valuemin="0" aria-valuemax="@item.MaxHP" style="min-width: 2em; width: @((item.CurrentHP/item.MaxHP)*100)%;">
                                @item.CurrentHP
                            </div>
                        </div>
                    </td>
                }
                else
                {
                    <td class="hpbar hidden-sm hidden-xs"></td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.MaxHP)
                </td>

                <td>
                    @foreach (var condition in item.Conditions)
                    {
                        <p>@condition</p>
                    }
                </td>

                @if (!item.IsPlayer)
                {
                    <td>
                        @Html.ActionLink("Attack", "Attack", new { id = item.ID, currentTurn = ViewBag.SelectedCharacter }, new { @class = "table-links" }) |
                        @Html.ActionLink("Edit Conditions", "EditCondition", new { id = item.ID, currentTurn = ViewBag.SelectedCharacter }, new { @class = "table-links" })
                    </td>
                }
                else
                {
                    <td>
                        @Html.ActionLink("Edit Conditions", "EditCondition", new { id = item.ID, currentTurn = ViewBag.SelectedCharacter }, new { @class = "table-links" })
                    </td>
                }
                <td>
                    @if (item.TurnOrderNumber == ViewBag.SelectedCharacter)
                    {
                        @Html.ActionLink("End Turn", "RunCombat", new { SelectedCharacter = item.TurnOrderNumber }, new { @class = "table-links" })
                    }
                </td>
            </tr>
        }

    </table>
</div>

@Html.ActionLink("Back to Combat List", "Index", null, new { @class = "table-links" })
